Junior java dev minimum requirements (learn them by this order): 

1. Java 7/8/9 (любую, желательно 8-ую и знать отличия). Книги: Кей Хорстманн – Java; Брюс Эккель – Философия Java. Первая будет немного посложнее для начинающего, вторая полегче. Учите все кроме графического интерфейса(swing, Java FX, applets) – все это пропускаете, так же если раздел “Reflection ” плохо идет – пропускаете его тоже, он не сильно нужен для начала. В процессе чтения вы сразу пишете то что выучили. От себя советую читать по одной главе в день – утром читаете главу и сразу пытаетесь практически применить знания. Вечером, перед сном, перечитываете ту же главу. Если глава сильно большая – то разделяете на части и так же само делаете, утром читаете одну часть и сразу педалите, вечером перечитываете. Иногда темы будут плохо восприниматься, и иногда придется перечитывать их по несколько раз. Я в свое время Брюса Эккеля перечитал 3 раза за несколько месяцев, и каждый раз понимал какой то материал иначе – это нормально, вы с этим тоже столкнётесь. Главное продолжайте делать то что начали. Можете посмотреть курс “Java для тестировщиков”, там более популярно объясняют про язык, но после него обязательно вернуться к книге. Вы должны железно знать этот материал что в книге описан, ибо он фундамент на котором вы будете строить свою карьеру, и по нему вас буду гонять на собеседовании. Лучше знать меньше, но знать это хорошо, нежели распыляться на все подряд. И еще раз повторюсь – больше пишите кода во время чтения книг.

2. SQl. Знать базовые запросы к БД, как создавать записи, удалять, что такое индексы, триггеры и процедуры. Ключевые слова: select, where, count/max/min/sum + having by, join. Скачайте mysql, подключитесь к нему через консоль, создайте БД, создайте таблицы и повставляйте туда записи. Поиграйтесь с таблицами: поудаляйте, поизменяйте значения полей что бы вы разобрались что оно такое. Материал загуглите сами (sql уроки), в интернете полно информации об этом, к примеру вот это http://www.site-do.ru/db/sql1.php

3. JDBC. Теперь пробуете вытянуть те данный что вы посоздавали в БД и показать их в консольном приложении. Ключевые слова: Connection, Statement/ PreparedStatement. Вы смотрите статью вот эту http://devcolibri.com/477 (не обращайте внимание что написано уроки андроида, данная статья вам тоже подходит). Пытаетесь написать то что написано в статье и запустить. В принципе, тут сильно много знать не нужно, можно разобраться за 1-2 дня, это просто грубо говоря мост между приложением которое написано на Java и базой данных. Несколько классов вам служат для взаимодействия с БД, их не сложно запомнить.

4. Maven. Можно почитать что это вот тут http://knzsoft.ru/java-maven/ , можно на официальном сайте. Ваша цель в этом пункте это библиотеку mysq-jdbc, которую вы использовали для предыдущего пункта, подключить в pom.xml и собрать приложение через мавен. Эта библиотека должна подтянуться сама из интернета во время сборки проекта. Качественные примеры на английском есть тут http://www.mkyong.com/tutorials/maven-tutorials/

5. Hibernate. Знание этого фреймворка вам будет большой плюс, я считаю что все же стоит потратить неделю – другую что бы его разобрать. Вы можете почитать http://www.quizful.net/post/Hibernate-3-introduction-and-writing-hello-world-application . Ключевые слова: Session, SessionFactory, Criteria, HQL. Качественные примеры есть тут http://www.mkyong.com/tutorials/hibernate-tutorials/ , но они на английском. Ваша цель тут сначала разобраться что оно такое, для чего используется. Потом выполните тот пример из первой статьи. Когда с ним будет понятно вы переходите на вторую ссылку и там смотрите примеры в разделах Hibernate Quick Start, Hibernate Association, Hibernate Query Language (HQL), Hibernate Criteria, Hibernate Native SQL. Они все примеры не большие, но я советую их просмотреть и понять что там происходит. Желательно это все еще у себя запустить и поиграться. 

6. Servlet API / Apache Tomcat. Читаете ftp://37.57.145.203/DOC/JAVA/web_services/Servlets.pdf, потом можно http://devcolibri.com/4284 http://devcolibri.com/1043. Смотрите видео уроки (https://www.youtube.com/watch?v=XYBcN5P4l0E и ему подобные) пробуете сделать простое веб приложение с одной страницей которое будет выдавать html страничку с простым текстом и запускаться на сервере Tomcat. Ключевые слова: Servlet, JSP, JSTL, Scriptlet, HttpRequest / HttpResponse, Session, GET/POST, HTTP. 

7. Spring (core)/ Spring MVC . Читаете тут http://spring-projects.ru/projects/spring-framework/, смотрите уроки на ютубе, смотрите книги http://www.ozon.ru/context/detail/id/31239365/ или http://www.ozon.ru/context/detail/id/33056979/ . Тут хороших уроков я пока не находил, все разбросанно по кускам и вам самим придется тут прилагать усилия что бы все найти и собрать в голове до кучи материал. Когда более мене начнете понимать как работает Spring IoC, Spring MVC то скачиваете учебное приложение https://github.com/spring-projects/spring-petclinic и смотрите как на этом фреймворке пишут приложения. Это уже близкое к тому, чем вы будете заниматься на реальных проектах. 

8. HTML/CSS – тоже большой плюс если знаете хотя бы на базовом уровне. Материал легкий и его предостаточно в интернете.


Я рекомендую использовать intellij idea как среду разработки. Английский обязателен, так как на русском мало достойной информации в интернете по тому же хибернейту и спрингу. Годный ресурс с примерами по спрингу, хибернейту, мавену, jdbc : https://www.mkyong.com . Учитесь гуглить любые вопросы: вылазит какая то ошибка – гуглите, не работает mysql – гуглите, не знаете как запустить томкат из идеи – гуглите. Ваша дальнейшая работа будет заключаться в поиске решений с которыми кто то уже сталкивался, и по этому вам необходимо уметь гуглить. Ключевые слова – это то, что вы должны знать что оно такое и как его использовать. По времени все зависит от вас, примерно на саму джаву уйдет месяц – два как минимум при условии что вы будете заниматься пару часов в день. На хибернейт, спринг и сервлеты около месяца. SQL, HTML\CSS, Maven где то по пять дней на каждую технологию. Это все примерные минимальные требования на junior java разработчика. Естественно поцизии в разных компаниях разные, вас могу взять даже только со знанием одной джавы, но если вы знаете перечень технологий что я расписал выше, то ваши шансы возрастут, ибо по факту, работодателю не нужно тратить на вас время что бы обучить тому же спрингу.
